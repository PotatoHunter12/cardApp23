import{_ as u,a as m,o,c as r,b as s,F as l,r as c,t as _}from"./index-60977d06.js";const g={data(){return{elements:[]}},created(){this.fetchElements()},methods:{async fetchElements(){try{const n=await m.get("http://localhost:3000/api/elements");this.elements=n.data}catch(n){console.error("Error fetching elements:",n)}},navigateToAdd(){this.$router.push({name:"AddElement"})},navigateToRules(){this.$router.push({name:"PointRules"})},back(){this.$router.push({name:"home"})},openGame(n){const e=JSON.stringify(n.items);this.$router.push({name:"gameTable",query:{items:e}})}}},h={class:"games-container"},b={class:"grid-container"},p={class:"grid"},v=["onClick"],k={class:"button-container"};function f(n,e,y,T,d,a){return o(),r(l,null,[s("div",h,[e[3]||(e[3]=s("h1",{class:"games-title"},"Games",-1)),s("div",b,[s("div",p,[(o(!0),r(l,null,c(d.elements,t=>(o(),r("div",{class:"card",onClick:i=>a.openGame(t),key:t._id},[(o(!0),r(l,null,c(t.items,i=>(o(),r("div",{class:"names",key:i.name},[s("p",null,_(i.name),1)]))),128))],8,v))),128))])]),s("div",k,[s("button",{class:"btn start-game-btn",onClick:e[0]||(e[0]=(...t)=>a.navigateToAdd&&a.navigateToAdd(...t))},"Start New Game"),s("button",{class:"btn count-points-btn",onClick:e[1]||(e[1]=(...t)=>a.navigateToRules&&a.navigateToRules(...t))},"How to Count Points")])]),s("button",{class:"btn back-btn",onClick:e[2]||(e[2]=(...t)=>a.back&&a.back(...t))},"Back")],64)}const G=u(g,[["render",f],["__scopeId","data-v-a9ca015e"]]);export{G as default};
